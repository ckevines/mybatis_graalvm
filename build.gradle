plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.graalvm.buildtools.native' version '0.10.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(23)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.slf4j:slf4j-api'
	implementation 'ch.qos.logback:logback-classic'

	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	// https://mvnrepository.com/artifact/org.springframework.boot.aot/org.springframework.boot.aot.gradle.plugin
	implementation 'org.springframework.boot.aot:org.springframework.boot.aot.gradle.plugin:3.4.2'

}

tasks.named('test') {
	useJUnitPlatform()
}

graalvmNative {
	binaries {
		main {
			buildArgs.add('--initialize-at-run-time=org.mybatis.spring.mapper.ClassPathMapperScanner')
			buildArgs.add('--initialize-at-run-time=org.apache.ibatis.logging.LogFactory')


			buildArgs.add('--initialize-at-run-time=org.mybatis.spring.mapper.MapperScannerConfigurer')

			// Use project directory variable correctly
			buildArgs.add("-H:DynamicProxyConfigurationFiles=${projectDir.absolutePath}/src/main/resources/META-INF/native-image/proxy-config.json")

			buildArgs.add("-H:ResourceConfigurationFiles=${projectDir.absolutePath}/src/main/resources/META-INF/native-image/resource-config.json")

			buildArgs.add("-H:ReflectionConfigurationFiles=${projectDir.absolutePath}/src/main/resources/META-INF/native-image/reflection-config.json")

		}
	}
}
